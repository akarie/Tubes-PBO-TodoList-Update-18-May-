/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package todolist;

import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author ariekurniawan
 */
public class MainMenu extends javax.swing.JFrame {
    public Aplikasi app;
    public GUI g = new GUI();
    public MainMenu m;
    private String user;
    private int i;
    /**
     * Creates new form MainMenu
     */
    public MainMenu() {
        initComponents();
    }
    public MainMenu(Aplikasi app, String user, int i) {
        this.m = this;
        this.app = app;
        this.user = user;
        this.i = i;
        initComponents();
    }
    public void opsiDeleteList(){
        LabelKodeListList.setEnabled(true);
        TextKodeList.setEnabled(true);
        LabelNamaList.setEnabled(false);
        TextNamaList.setEnabled(false);
    }
    public void opsiInputList(){
        LabelKodeListList.setEnabled(false);
        TextKodeList.setEnabled(false);
        LabelNamaList.setEnabled(true);
        TextNamaList.setEnabled(true);
    }
    public void opsiUpdateList(){
        LabelKodeListList.setEnabled(true);
        TextKodeList.setEnabled(true);
        LabelNamaList.setEnabled(true);
        TextNamaList.setEnabled(true);
    }
    public void opsiInputTask(){
        LabelKodeListTask.setEnabled(true);
        textKodeListTask.setEnabled(true);
        LabelKodeTask.setEnabled(false);
        textKodeTask.setEnabled(false);
        labelNamaTask.setEnabled(true);
        textNamaTask.setEnabled(true);
        labelDueDate.setEnabled(true);
        dateDueDate.setEnabled(true);
        LabelPriority.setEnabled(true);
        ComboBoxPriority.setEnabled(true);
    }
    public void opsiUpdateTask(){
        LabelKodeListTask.setEnabled(true);
        textKodeListTask.setEnabled(true);
        LabelKodeTask.setEnabled(true);
        textKodeTask.setEnabled(true);
        labelNamaTask.setEnabled(true);
        textNamaTask.setEnabled(true);
        labelDueDate.setEnabled(true);
        dateDueDate.setEnabled(true);
        LabelPriority.setEnabled(true);
        ComboBoxPriority.setEnabled(true);
    }
    public void opsiDeleteTask(){
        LabelKodeListTask.setEnabled(true);
        textKodeListTask.setEnabled(true);
        LabelKodeTask.setEnabled(true);
        textKodeTask.setEnabled(true);
        labelNamaTask.setEnabled(false);
        textNamaTask.setEnabled(false);
        labelDueDate.setEnabled(false);
        dateDueDate.setEnabled(false);
        LabelPriority.setEnabled(false);
        ComboBoxPriority.setEnabled(false);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label2 = new java.awt.Label();
        buttonGroup1 = new javax.swing.ButtonGroup();
        PanelMainMenu = new javax.swing.JTabbedPane();
        PanelList = new java.awt.Panel();
        TextNamaList = new javax.swing.JTextField();
        LabelKodeListList = new javax.swing.JLabel();
        ButtonEnterList = new javax.swing.JButton();
        LabelPilihMenuList = new javax.swing.JLabel();
        ComboBoxList = new javax.swing.JComboBox();
        LabelNamaList = new javax.swing.JLabel();
        TextKodeList = new javax.swing.JTextField();
        PanelTask = new java.awt.Panel();
        LabelPilihMenuTask = new javax.swing.JLabel();
        ComboBoxTask = new javax.swing.JComboBox();
        LabelKodeListTask = new javax.swing.JLabel();
        LabelKodeTask = new javax.swing.JLabel();
        labelNamaTask = new javax.swing.JLabel();
        textNamaTask = new javax.swing.JTextField();
        labelDueDate = new javax.swing.JLabel();
        LabelPriority = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        ButtonOK = new javax.swing.JButton();
        textKodeListTask = new javax.swing.JTextField();
        textKodeTask = new javax.swing.JTextField();
        dateDueDate = new org.jdesktop.swingx.JXDatePicker();
        ComboBoxPriority = new javax.swing.JComboBox();
        PanelView = new java.awt.Panel();
        ButtonViewAllTask = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        textareaView = new javax.swing.JTextArea();
        PanelShare = new java.awt.Panel();
        label1 = new java.awt.Label();
        LabelUsernameTujuan = new javax.swing.JLabel();
        TextUsernameTujuan = new javax.swing.JTextField();
        LabelInputKodeListShare = new javax.swing.JLabel();
        ButtonShare = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        taUsername = new javax.swing.JTextArea();
        buttonRefresh = new javax.swing.JButton();
        TextShareKodeList = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        LabelInputKodeTask = new javax.swing.JLabel();
        TextKodeTaskReminder = new javax.swing.JTextField();
        LabelInputTanggal = new javax.swing.JLabel();
        ButtonReminder = new javax.swing.JButton();
        ButtonOnADay = new javax.swing.JRadioButton();
        buttonDayBefore = new javax.swing.JRadioButton();
        LabelInputKodeTask1 = new javax.swing.JLabel();
        TextKodeListReminder = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        ButtonLogOut = new javax.swing.JButton();
        ButtonSetting = new javax.swing.JButton();
        LabelMyToDoListList = new javax.swing.JLabel();

        label2.setText("label1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        LabelKodeListList.setText("Masukkan Kode List");
        LabelKodeListList.setEnabled(false);

        ButtonEnterList.setText("Enter");
        ButtonEnterList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonEnterListActionPerformed(evt);
            }
        });

        LabelPilihMenuList.setText("Pilih Menu");

        ComboBoxList.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Input", "Update", "Delete" }));
        ComboBoxList.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxListItemStateChanged(evt);
            }
        });
        ComboBoxList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBoxListMouseClicked(evt);
            }
        });
        ComboBoxList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxListActionPerformed(evt);
            }
        });

        LabelNamaList.setText("Nama List");

        TextKodeList.setEnabled(false);
        TextKodeList.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TextKodeListActionPerformed(evt);
            }
        });
        TextKodeList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                TextKodeListKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TextKodeListKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                TextKodeListKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout PanelListLayout = new javax.swing.GroupLayout(PanelList);
        PanelList.setLayout(PanelListLayout);
        PanelListLayout.setHorizontalGroup(
            PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelListLayout.createSequentialGroup()
                .addContainerGap(65, Short.MAX_VALUE)
                .addComponent(LabelPilihMenuList)
                .addGap(268, 268, 268))
            .addGroup(PanelListLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(LabelNamaList)
                    .addGroup(PanelListLayout.createSequentialGroup()
                        .addComponent(LabelKodeListList)
                        .addGap(1, 1, 1)))
                .addGap(18, 18, 18)
                .addGroup(PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(TextKodeList, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ButtonEnterList, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ComboBoxList, javax.swing.GroupLayout.Alignment.LEADING, 0, 87, Short.MAX_VALUE)
                    .addComponent(TextNamaList))
                .addContainerGap(158, Short.MAX_VALUE))
        );
        PanelListLayout.setVerticalGroup(
            PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelListLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelPilihMenuList, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelKodeListList, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextKodeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelListLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelNamaList)
                    .addComponent(TextNamaList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ButtonEnterList)
                .addContainerGap(136, Short.MAX_VALUE))
        );

        PanelMainMenu.addTab("List", PanelList);

        LabelPilihMenuTask.setText("Pilih Menu");

        ComboBoxTask.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Input", "Edit", "Delete" }));
        ComboBoxTask.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxTaskItemStateChanged(evt);
            }
        });
        ComboBoxTask.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBoxTaskMouseClicked(evt);
            }
        });
        ComboBoxTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxTaskActionPerformed(evt);
            }
        });

        LabelKodeListTask.setText("Input Kode List");

        LabelKodeTask.setText("Input Kode Task");
        LabelKodeTask.setEnabled(false);

        labelNamaTask.setText("Nama Task");

        labelDueDate.setText("Due Date");

        LabelPriority.setText("Priority");

        ButtonOK.setText("Enter");
        ButtonOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonOKActionPerformed(evt);
            }
        });

        textKodeTask.setEnabled(false);

        dateDueDate.setFormats(new SimpleDateFormat("MMMM d, yyyy", Locale.ENGLISH));

        ComboBoxPriority.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1(Tinggi)", "2(Sedang)", "3(Rendah)" }));
        ComboBoxPriority.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                ComboBoxPriorityItemStateChanged(evt);
            }
        });
        ComboBoxPriority.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ComboBoxPriorityMouseClicked(evt);
            }
        });
        ComboBoxPriority.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxPriorityActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelTaskLayout = new javax.swing.GroupLayout(PanelTask);
        PanelTask.setLayout(PanelTaskLayout);
        PanelTaskLayout.setHorizontalGroup(
            PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTaskLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelPilihMenuTask)
                    .addComponent(LabelKodeTask)
                    .addComponent(LabelKodeListTask)
                    .addComponent(labelNamaTask)
                    .addComponent(labelDueDate)
                    .addComponent(LabelPriority))
                .addGap(26, 26, 26)
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTaskLayout.createSequentialGroup()
                        .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textKodeListTask)
                            .addComponent(textKodeTask)
                            .addComponent(textNamaTask)
                            .addGroup(PanelTaskLayout.createSequentialGroup()
                                .addComponent(dateDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 19, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9))
                    .addGroup(PanelTaskLayout.createSequentialGroup()
                        .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboBoxTask, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(ButtonOK)
                            .addComponent(ComboBoxPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addGap(117, 117, 117))
        );
        PanelTaskLayout.setVerticalGroup(
            PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelTaskLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPilihMenuTask)
                    .addComponent(ComboBoxTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelKodeListTask)
                    .addComponent(textKodeListTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(LabelKodeTask)
                        .addComponent(textKodeTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(PanelTaskLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textNamaTask, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelNamaTask))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dateDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelDueDate)
                        .addComponent(jLabel9)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(PanelTaskLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelPriority)
                    .addComponent(ComboBoxPriority, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(ButtonOK)
                .addContainerGap(90, Short.MAX_VALUE))
        );

        PanelMainMenu.addTab("Task", PanelTask);

        ButtonViewAllTask.setText("Refresh");
        ButtonViewAllTask.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonViewAllTaskActionPerformed(evt);
            }
        });

        textareaView.setEditable(false);
        textareaView.setColumns(20);
        textareaView.setRows(5);
        jScrollPane2.setViewportView(textareaView);

        javax.swing.GroupLayout PanelViewLayout = new javax.swing.GroupLayout(PanelView);
        PanelView.setLayout(PanelViewLayout);
        PanelViewLayout.setHorizontalGroup(
            PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 380, Short.MAX_VALUE)
            .addGroup(PanelViewLayout.createSequentialGroup()
                .addComponent(ButtonViewAllTask)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelViewLayout.setVerticalGroup(
            PanelViewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelViewLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(ButtonViewAllTask)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 212, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(46, Short.MAX_VALUE))
        );

        PanelMainMenu.addTab("View", PanelView);

        label1.setText("label1");

        LabelUsernameTujuan.setText("Masukkan Username Tujuan");

        LabelInputKodeListShare.setText("Masukkan Kode List");

        ButtonShare.setText("Share");
        ButtonShare.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonShareActionPerformed(evt);
            }
        });

        taUsername.setEditable(false);
        taUsername.setColumns(20);
        taUsername.setRows(5);
        jScrollPane3.setViewportView(taUsername);

        buttonRefresh.setText("Load user");
        buttonRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRefreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PanelShareLayout = new javax.swing.GroupLayout(PanelShare);
        PanelShare.setLayout(PanelShareLayout);
        PanelShareLayout.setHorizontalGroup(
            PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelShareLayout.createSequentialGroup()
                .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelShareLayout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelShareLayout.createSequentialGroup()
                                .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(LabelUsernameTujuan)
                                    .addComponent(LabelInputKodeListShare))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(TextShareKodeList, javax.swing.GroupLayout.DEFAULT_SIZE, 61, Short.MAX_VALUE)
                                    .addComponent(TextUsernameTujuan)))
                            .addComponent(ButtonShare, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, PanelShareLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonRefresh)
                .addContainerGap(38, Short.MAX_VALUE))
        );
        PanelShareLayout.setVerticalGroup(
            PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelShareLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonRefresh))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelUsernameTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TextUsernameTujuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelShareLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TextShareKodeList, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelInputKodeListShare))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ButtonShare)
                .addContainerGap(61, Short.MAX_VALUE))
        );

        PanelMainMenu.addTab("Share", PanelShare);

        LabelInputKodeTask.setText("Input Kode Task");

        LabelInputTanggal.setText("Remind Me");

        ButtonReminder.setText("Add Reminder");
        ButtonReminder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonReminderActionPerformed(evt);
            }
        });

        buttonGroup1.add(ButtonOnADay);
        ButtonOnADay.setText("On A Day");

        buttonGroup1.add(buttonDayBefore);
        buttonDayBefore.setText("A Day Before");

        LabelInputKodeTask1.setText("Input Kode List");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(37, 37, 37)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(LabelInputKodeTask1)
                            .addComponent(LabelInputKodeTask))
                        .addGap(54, 54, 54)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextKodeTaskReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(TextKodeListReminder, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(LabelInputTanggal)
                        .addGap(60, 60, 60)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ButtonOnADay)
                            .addComponent(buttonDayBefore)
                            .addComponent(ButtonReminder))))
                .addContainerGap(104, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelInputKodeTask1)
                    .addComponent(TextKodeListReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelInputKodeTask)
                    .addComponent(TextKodeTaskReminder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelInputTanggal)
                    .addComponent(ButtonOnADay))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonDayBefore)
                .addGap(18, 18, 18)
                .addComponent(ButtonReminder)
                .addContainerGap(128, Short.MAX_VALUE))
        );

        PanelMainMenu.addTab("Reminder", jPanel1);

        jLabel1.setText("Welcome! " + this.user
        );

        ButtonLogOut.setText("Log Out");
        ButtonLogOut.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonLogOutActionPerformed(evt);
            }
        });

        ButtonSetting.setText("Setting");
        ButtonSetting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ButtonSettingActionPerformed(evt);
            }
        });

        LabelMyToDoListList.setText("My To Do List");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(ButtonSetting)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ButtonLogOut))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(PanelMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 385, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(LabelMyToDoListList))))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(LabelMyToDoListList, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelMainMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 338, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonLogOut)
                    .addComponent(ButtonSetting)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboBoxListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxListActionPerformed

    private void ButtonShareActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonShareActionPerformed
        try {
            int j = app.currentIndex(TextUsernameTujuan.getText());
            boolean cek = app.shareList(i, j, TextShareKodeList.getText());
            System.out.println(i +", "+ j + cek);
            if(cek) JOptionPane.showMessageDialog(null,"List berhasil dishare !","Share Sukses",1);
            else JOptionPane.showMessageDialog(null,"Username atau kode list salah!","Share Gagal",2);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonShareActionPerformed

    private void ButtonLogOutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonLogOutActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        g.setLocationRelativeTo(null);
        g.setVisible(true);
    }//GEN-LAST:event_ButtonLogOutActionPerformed

    private void ButtonSettingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonSettingActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        Setting s = new Setting(m, app, user, i);
        s.setLocationRelativeTo(null);
        s.setVisible(true);
    }//GEN-LAST:event_ButtonSettingActionPerformed

    private void ComboBoxListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxListMouseClicked
        // TODO add your handling code here:
        if(ComboBoxList.getSelectedIndex()==0) opsiInputList();
        else if(ComboBoxList.getSelectedIndex()==1) opsiUpdateList();
        else opsiDeleteList();
    }//GEN-LAST:event_ComboBoxListMouseClicked

    private void ComboBoxListItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxListItemStateChanged
        // TODO add your handling code here:
        if(ComboBoxList.getSelectedIndex()==0) opsiInputList();
        else if(ComboBoxList.getSelectedIndex()==1) opsiUpdateList();
        else opsiDeleteList();
    }//GEN-LAST:event_ComboBoxListItemStateChanged

    private void ButtonEnterListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonEnterListActionPerformed
        // TODO add your handling code here:
        if(ComboBoxList.getSelectedIndex()==0){
            try {
                app.inputList(this.i, this.user, TextNamaList.getText());
                JOptionPane.showMessageDialog(null,"List berhasil ditambah!","Input sukses",1);
            } catch (IOException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(ComboBoxList.getSelectedIndex()==1){
            try {
                boolean cek = app.updateList(i, TextKodeList.getText(), TextNamaList.getText());
                if(cek) JOptionPane.showMessageDialog(null, "List berhasil diupdate!","Update Sukses",1);
                else JOptionPane.showMessageDialog(null, "Kode list tidak ditemukan!","Update Gagal",2);
            } catch (IOException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }else{
            try {
                boolean cek = app.deleteList(i, TextKodeList.getText());
                if(cek) JOptionPane.showMessageDialog(null, "List berhasil dihapus!","Hapus Sukses",1);
                else JOptionPane.showMessageDialog(null, "Kode list tidak ditemukan!","Hapus Gagal",2);
            } catch (IOException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        TextKodeList.setText("");
        TextNamaList.setText("");
    }//GEN-LAST:event_ButtonEnterListActionPerformed

    private void ButtonViewAllTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonViewAllTaskActionPerformed
        // TODO add your handling code here:
        textareaView.setText(app.viewTask(i).toString());
    }//GEN-LAST:event_ButtonViewAllTaskActionPerformed

    private void TextKodeListActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TextKodeListActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextKodeListActionPerformed

    private void TextKodeListKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextKodeListKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_TextKodeListKeyPressed

    private void TextKodeListKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextKodeListKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_TextKodeListKeyTyped

    private void TextKodeListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TextKodeListKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_TextKodeListKeyReleased

    private void ComboBoxTaskMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxTaskMouseClicked
        // TODO add your handling code here:
        if(ComboBoxTask.getSelectedIndex()==0) opsiInputTask();
        else if(ComboBoxTask.getSelectedIndex()==1) opsiUpdateTask();
        else opsiDeleteTask();
    }//GEN-LAST:event_ComboBoxTaskMouseClicked

    private void ComboBoxTaskItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxTaskItemStateChanged
        // TODO add your handling code here:
        if(ComboBoxTask.getSelectedIndex()==0) opsiInputTask();
        else if(ComboBoxTask.getSelectedIndex()==1) opsiUpdateTask();
        else opsiDeleteTask();
    }//GEN-LAST:event_ComboBoxTaskItemStateChanged

    private void ButtonOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonOKActionPerformed
        // TODO add your handling code here:
        if(ComboBoxTask.getSelectedIndex()==0){
            try {
                boolean cek = app.inputTask(i, textKodeListTask.getText(), textNamaTask.getText(), dateDueDate.getDate(), ComboBoxPriority.getSelectedIndex()+1);
                if(cek) JOptionPane.showMessageDialog(null, "Task berhasil ditambah!","Input Sukses",1);
                else JOptionPane.showMessageDialog(null, "Kode list tidak ditemukan!","Input Gagal",2);
            } catch (IOException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else if(ComboBoxTask.getSelectedIndex()==1){
            try {
                boolean cek = app.updateTask(i, textKodeListTask.getText(), textKodeTask.getText(),textNamaTask.getText(), dateDueDate.getDate(), ComboBoxPriority.getSelectedIndex()+1);
                if(cek) JOptionPane.showMessageDialog(null, "Task berhasil diupdate!","Update Sukses",1);
                else JOptionPane.showMessageDialog(null, "Kode list/task tidak ditemukan!","Update Gagal",2);
            } catch (IOException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            try {
                boolean cek = app.deleteTask(i, textKodeListTask.getText(), textKodeTask.getText());
                if(cek) JOptionPane.showMessageDialog(null, "Task berhasil dihapus!","Hapus Sukses",1);
                else JOptionPane.showMessageDialog(null, "Kode list/task tidak ditemukan!","Hapus Gagal",2);
            } catch (IOException ex) {
                Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        textKodeListTask.setText("");
        textKodeTask.setText("");
        textNamaTask.setText("");
        dateDueDate.setDate(null);
        ComboBoxPriority.setSelectedIndex(0);
    }//GEN-LAST:event_ButtonOKActionPerformed

    private void ComboBoxTaskActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxTaskActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxTaskActionPerformed

    private void ButtonReminderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ButtonReminderActionPerformed
        try {
            int day = 0;
            if(ButtonOnADay.isSelected()) day=0;
            else day=1;
            boolean cek = app.addReminder(TextKodeListReminder.getText(), TextKodeTaskReminder.getText(),day,i);
            if(cek) JOptionPane.showMessageDialog(null,"Reminder Berhasil Ditambahkan!","Add Reminder Sukses",1);
            else JOptionPane.showMessageDialog(null,"Kode tidak ditemukan!","Add Reminder Gagal",2);
        } catch (IOException ex) {
            Logger.getLogger(MainMenu.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_ButtonReminderActionPerformed

    private void buttonRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRefreshActionPerformed
        
            // TODO add your handling code here:
            taUsername.setText(app.getUsername());
    }//GEN-LAST:event_buttonRefreshActionPerformed

    private void ComboBoxPriorityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxPriorityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxPriorityActionPerformed

    private void ComboBoxPriorityItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_ComboBoxPriorityItemStateChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxPriorityItemStateChanged

    private void ComboBoxPriorityMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ComboBoxPriorityMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxPriorityMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                MainMenu m = new MainMenu();
                m.setLocationRelativeTo(null);
                m.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonEnterList;
    private javax.swing.JButton ButtonLogOut;
    private javax.swing.JButton ButtonOK;
    private javax.swing.JRadioButton ButtonOnADay;
    private javax.swing.JButton ButtonReminder;
    private javax.swing.JButton ButtonSetting;
    private javax.swing.JButton ButtonShare;
    private javax.swing.JButton ButtonViewAllTask;
    private javax.swing.JComboBox ComboBoxList;
    private javax.swing.JComboBox ComboBoxPriority;
    private javax.swing.JComboBox ComboBoxTask;
    private javax.swing.JLabel LabelInputKodeListShare;
    private javax.swing.JLabel LabelInputKodeTask;
    private javax.swing.JLabel LabelInputKodeTask1;
    private javax.swing.JLabel LabelInputTanggal;
    private javax.swing.JLabel LabelKodeListList;
    private javax.swing.JLabel LabelKodeListTask;
    private javax.swing.JLabel LabelKodeTask;
    private javax.swing.JLabel LabelMyToDoListList;
    private javax.swing.JLabel LabelNamaList;
    private javax.swing.JLabel LabelPilihMenuList;
    private javax.swing.JLabel LabelPilihMenuTask;
    private javax.swing.JLabel LabelPriority;
    private javax.swing.JLabel LabelUsernameTujuan;
    private java.awt.Panel PanelList;
    private javax.swing.JTabbedPane PanelMainMenu;
    private java.awt.Panel PanelShare;
    private java.awt.Panel PanelTask;
    private java.awt.Panel PanelView;
    private javax.swing.JTextField TextKodeList;
    private javax.swing.JTextField TextKodeListReminder;
    private javax.swing.JTextField TextKodeTaskReminder;
    private javax.swing.JTextField TextNamaList;
    private javax.swing.JTextField TextShareKodeList;
    private javax.swing.JTextField TextUsernameTujuan;
    private javax.swing.JRadioButton buttonDayBefore;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton buttonRefresh;
    private org.jdesktop.swingx.JXDatePicker dateDueDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JLabel labelDueDate;
    private javax.swing.JLabel labelNamaTask;
    private javax.swing.JTextArea taUsername;
    private javax.swing.JTextField textKodeListTask;
    private javax.swing.JTextField textKodeTask;
    private javax.swing.JTextField textNamaTask;
    private javax.swing.JTextArea textareaView;
    // End of variables declaration//GEN-END:variables
}
